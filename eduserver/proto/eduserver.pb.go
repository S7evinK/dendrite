// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.12.4
// source: eduserver.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ReceiptEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    string               `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	RoomID    string               `protobuf:"bytes,2,opt,name=RoomID,proto3" json:"RoomID,omitempty"`
	EventID   string               `protobuf:"bytes,3,opt,name=EventID,proto3" json:"EventID,omitempty"`
	Type      string               `protobuf:"bytes,4,opt,name=Type,proto3" json:"Type,omitempty"`
	Timestamp *timestamp.Timestamp `protobuf:"bytes,5,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
}

func (x *ReceiptEvent) Reset() {
	*x = ReceiptEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eduserver_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiptEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiptEvent) ProtoMessage() {}

func (x *ReceiptEvent) ProtoReflect() protoreflect.Message {
	mi := &file_eduserver_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiptEvent.ProtoReflect.Descriptor instead.
func (*ReceiptEvent) Descriptor() ([]byte, []int) {
	return file_eduserver_proto_rawDescGZIP(), []int{0}
}

func (x *ReceiptEvent) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *ReceiptEvent) GetRoomID() string {
	if x != nil {
		return x.RoomID
	}
	return ""
}

func (x *ReceiptEvent) GetEventID() string {
	if x != nil {
		return x.EventID
	}
	return ""
}

func (x *ReceiptEvent) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ReceiptEvent) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type TypingEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID         string               `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	RoomID         string               `protobuf:"bytes,2,opt,name=RoomID,proto3" json:"RoomID,omitempty"`
	Typing         bool                 `protobuf:"varint,3,opt,name=Typing,proto3" json:"Typing,omitempty"`
	Timeout        uint64               `protobuf:"varint,4,opt,name=Timeout,proto3" json:"Timeout,omitempty"`
	OriginServerTS *timestamp.Timestamp `protobuf:"bytes,5,opt,name=OriginServerTS,proto3" json:"OriginServerTS,omitempty"`
}

func (x *TypingEvent) Reset() {
	*x = TypingEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eduserver_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypingEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypingEvent) ProtoMessage() {}

func (x *TypingEvent) ProtoReflect() protoreflect.Message {
	mi := &file_eduserver_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypingEvent.ProtoReflect.Descriptor instead.
func (*TypingEvent) Descriptor() ([]byte, []int) {
	return file_eduserver_proto_rawDescGZIP(), []int{1}
}

func (x *TypingEvent) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *TypingEvent) GetRoomID() string {
	if x != nil {
		return x.RoomID
	}
	return ""
}

func (x *TypingEvent) GetTyping() bool {
	if x != nil {
		return x.Typing
	}
	return false
}

func (x *TypingEvent) GetTimeout() uint64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *TypingEvent) GetOriginServerTS() *timestamp.Timestamp {
	if x != nil {
		return x.OriginServerTS
	}
	return nil
}

type SendToDeviceEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	DeviceID string `protobuf:"bytes,2,opt,name=DeviceID,proto3" json:"DeviceID,omitempty"`
	Sender   string `protobuf:"bytes,3,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Type     string `protobuf:"bytes,4,opt,name=Type,proto3" json:"Type,omitempty"`
	Content  []byte `protobuf:"bytes,5,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (x *SendToDeviceEvent) Reset() {
	*x = SendToDeviceEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eduserver_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendToDeviceEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendToDeviceEvent) ProtoMessage() {}

func (x *SendToDeviceEvent) ProtoReflect() protoreflect.Message {
	mi := &file_eduserver_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendToDeviceEvent.ProtoReflect.Descriptor instead.
func (*SendToDeviceEvent) Descriptor() ([]byte, []int) {
	return file_eduserver_proto_rawDescGZIP(), []int{2}
}

func (x *SendToDeviceEvent) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *SendToDeviceEvent) GetDeviceID() string {
	if x != nil {
		return x.DeviceID
	}
	return ""
}

func (x *SendToDeviceEvent) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *SendToDeviceEvent) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SendToDeviceEvent) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type EmptyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyResponse) Reset() {
	*x = EmptyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eduserver_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyResponse) ProtoMessage() {}

func (x *EmptyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eduserver_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyResponse.ProtoReflect.Descriptor instead.
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return file_eduserver_proto_rawDescGZIP(), []int{3}
}

var File_eduserver_proto protoreflect.FileDescriptor

var file_eduserver_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x65, 0x64, 0x75, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa6, 0x01, 0x0a, 0x0c, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x70, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x22, 0xb3, 0x01, 0x0a, 0x0b, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f,
	0x6f, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x6f, 0x6f, 0x6d,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x12, 0x42, 0x0a, 0x0e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x54, 0x53, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x53, 0x22, 0x8d, 0x01, 0x0a, 0x11, 0x53, 0x65, 0x6e,
	0x64, 0x54, 0x6f, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x0f, 0x0a, 0x0d, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xce, 0x01, 0x0a, 0x0a, 0x45, 0x64,
	0x75, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x13, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0f, 0x53, 0x65, 0x6e,
	0x64, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64,
	0x54, 0x6f, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eduserver_proto_rawDescOnce sync.Once
	file_eduserver_proto_rawDescData = file_eduserver_proto_rawDesc
)

func file_eduserver_proto_rawDescGZIP() []byte {
	file_eduserver_proto_rawDescOnce.Do(func() {
		file_eduserver_proto_rawDescData = protoimpl.X.CompressGZIP(file_eduserver_proto_rawDescData)
	})
	return file_eduserver_proto_rawDescData
}

var file_eduserver_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_eduserver_proto_goTypes = []interface{}{
	(*ReceiptEvent)(nil),        // 0: proto.ReceiptEvent
	(*TypingEvent)(nil),         // 1: proto.TypingEvent
	(*SendToDeviceEvent)(nil),   // 2: proto.SendToDeviceEvent
	(*EmptyResponse)(nil),       // 3: proto.EmptyResponse
	(*timestamp.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_eduserver_proto_depIdxs = []int32{
	4, // 0: proto.ReceiptEvent.Timestamp:type_name -> google.protobuf.Timestamp
	4, // 1: proto.TypingEvent.OriginServerTS:type_name -> google.protobuf.Timestamp
	0, // 2: proto.EduService.SendReceiptEvent:input_type -> proto.ReceiptEvent
	1, // 3: proto.EduService.SendTypingEvent:input_type -> proto.TypingEvent
	2, // 4: proto.EduService.SendToDevice:input_type -> proto.SendToDeviceEvent
	3, // 5: proto.EduService.SendReceiptEvent:output_type -> proto.EmptyResponse
	3, // 6: proto.EduService.SendTypingEvent:output_type -> proto.EmptyResponse
	3, // 7: proto.EduService.SendToDevice:output_type -> proto.EmptyResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_eduserver_proto_init() }
func file_eduserver_proto_init() {
	if File_eduserver_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_eduserver_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiptEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eduserver_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypingEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eduserver_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendToDeviceEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eduserver_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eduserver_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eduserver_proto_goTypes,
		DependencyIndexes: file_eduserver_proto_depIdxs,
		MessageInfos:      file_eduserver_proto_msgTypes,
	}.Build()
	File_eduserver_proto = out.File
	file_eduserver_proto_rawDesc = nil
	file_eduserver_proto_goTypes = nil
	file_eduserver_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// EduServiceClient is the client API for EduService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EduServiceClient interface {
	SendReceiptEvent(ctx context.Context, in *ReceiptEvent, opts ...grpc.CallOption) (*EmptyResponse, error)
	SendTypingEvent(ctx context.Context, in *TypingEvent, opts ...grpc.CallOption) (*EmptyResponse, error)
	SendToDevice(ctx context.Context, in *SendToDeviceEvent, opts ...grpc.CallOption) (*EmptyResponse, error)
}

type eduServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewEduServiceClient(cc grpc.ClientConnInterface) EduServiceClient {
	return &eduServiceClient{cc}
}

func (c *eduServiceClient) SendReceiptEvent(ctx context.Context, in *ReceiptEvent, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/proto.EduService/SendReceiptEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eduServiceClient) SendTypingEvent(ctx context.Context, in *TypingEvent, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/proto.EduService/SendTypingEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eduServiceClient) SendToDevice(ctx context.Context, in *SendToDeviceEvent, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/proto.EduService/SendToDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EduServiceServer is the server API for EduService service.
type EduServiceServer interface {
	SendReceiptEvent(context.Context, *ReceiptEvent) (*EmptyResponse, error)
	SendTypingEvent(context.Context, *TypingEvent) (*EmptyResponse, error)
	SendToDevice(context.Context, *SendToDeviceEvent) (*EmptyResponse, error)
}

// UnimplementedEduServiceServer can be embedded to have forward compatible implementations.
type UnimplementedEduServiceServer struct {
}

func (*UnimplementedEduServiceServer) SendReceiptEvent(context.Context, *ReceiptEvent) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendReceiptEvent not implemented")
}
func (*UnimplementedEduServiceServer) SendTypingEvent(context.Context, *TypingEvent) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendTypingEvent not implemented")
}
func (*UnimplementedEduServiceServer) SendToDevice(context.Context, *SendToDeviceEvent) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendToDevice not implemented")
}

func RegisterEduServiceServer(s *grpc.Server, srv EduServiceServer) {
	s.RegisterService(&_EduService_serviceDesc, srv)
}

func _EduService_SendReceiptEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReceiptEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EduServiceServer).SendReceiptEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.EduService/SendReceiptEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EduServiceServer).SendReceiptEvent(ctx, req.(*ReceiptEvent))
	}
	return interceptor(ctx, in, info, handler)
}

func _EduService_SendTypingEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TypingEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EduServiceServer).SendTypingEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.EduService/SendTypingEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EduServiceServer).SendTypingEvent(ctx, req.(*TypingEvent))
	}
	return interceptor(ctx, in, info, handler)
}

func _EduService_SendToDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendToDeviceEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EduServiceServer).SendToDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.EduService/SendToDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EduServiceServer).SendToDevice(ctx, req.(*SendToDeviceEvent))
	}
	return interceptor(ctx, in, info, handler)
}

var _EduService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.EduService",
	HandlerType: (*EduServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendReceiptEvent",
			Handler:    _EduService_SendReceiptEvent_Handler,
		},
		{
			MethodName: "SendTypingEvent",
			Handler:    _EduService_SendTypingEvent_Handler,
		},
		{
			MethodName: "SendToDevice",
			Handler:    _EduService_SendToDevice_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "eduserver.proto",
}
